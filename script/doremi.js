// Generated by CoffeeScript 1.6.3
(function() {
  var changeText, char2note, createNote, stopRing;

  $(function() {
    this.noteLength = 400;
    this.context = new webkitAudioContext();
    return $("#send-text").on('click', function() {
      var text;
      text = $("#contents").val();
      return changeText(text);
    });
  });

  changeText = function(text) {
    var c, cnt, i, len, long, _results;
    long = new RegExp("[-ー]");
    i = 0;
    len = 0;
    _results = [];
    while (i < text.length) {
      cnt = 1;
      c = text[i];
      if (i !== text.length - 1 && text[i] + text[i + 1] === ("ふぁ" || "ファ")) {
        c = text[i] + text[i + 1];
        i++;
      }
      while (i < text.length - 1 && text[i + 1].match(long)) {
        cnt++;
        i++;
      }
      setTimeout(createNote, len * noteLength, context, char2note(c), cnt);
      i++;
      _results.push(len += cnt);
    }
    return _results;
  };

  char2note = function(c) {
    var key, patterns, re, _i, _len, _ref;
    patterns = {
      "[どド]": 523,
      "[れレ]": 587,
      "[みミ]": 659,
      "[ふぁ|ファ]": 698,
      "[そソ]": 783,
      "[らラ]": 880,
      "[しシ]": 988,
      "[とト]": 1044
    };
    _ref = Object.keys(patterns);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      key = _ref[_i];
      re = new RegExp(key);
      if (c.match(re)) {
        return patterns[key];
      }
    }
    return -1;
  };

  createNote = function(context, v, cnt) {
    var oscillator;
    if (v < 0) {
      return 0;
    }
    oscillator = context.createOscillator();
    oscillator.type = 0;
    oscillator.frequency.value = v;
    oscillator.connect(context.destination);
    oscillator.noteOn(0);
    return setTimeout(stopRing, noteLength * cnt, oscillator);
  };

  stopRing = function(oscillator) {
    return oscillator.noteOff(0);
  };

}).call(this);
